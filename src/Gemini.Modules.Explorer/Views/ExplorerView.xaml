<UserControl x:Class="Gemini.Modules.Explorer.Views.ExplorerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dd="clr-namespace:Gemini.Modules.Explorer.Design"
             xmlns:controls="clr-namespace:Gemini.Modules.MainMenu.Controls;assembly=Gemini"
             xmlns:tvx="clr-namespace:System.Windows.Controls;assembly=DotNetProjects.TreeViewEx"
             xmlns:model="clr-namespace:Gemini.Modules.Explorer.Models"
             xmlns:properties="clr-namespace:Gemini.Modules.Explorer.Properties"
             xmlns:views="clr-namespace:Gemini.Modules.Explorer.Views"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             d:DataContext="{d:DesignInstance dd:DesignTimeExplorerViewModel, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <ResourceDictionary Source="../Resources/Styles.xaml" />
        <!--<converters:NullableValueConverter x:Key="NullableValueConverter" />-->
    </UserControl.Resources>
    <Grid>
        <Button Content="{x:Static properties:Resources.OpenFolderCommandText}" Command="{Binding OpenOpenSourceCommand}" VerticalAlignment="Top">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSourceOpened}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSourceOpened}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <DockPanel Grid.Row="0">
                <Image Source="{Binding SourceTree.IconSource, Converter={StaticResource NullableValueConverter}}" Stretch="None" Margin="10 0 5 0" />
                <TextBlock Text="{Binding SourceTree.Name}" />
            </DockPanel>
            <tvx:TreeViewEx x:Name="TreeView" Grid.Row="1" ItemsSource="{Binding SourceTree.Children}">
                <tvx:TreeViewEx.Style>
                    <Style TargetType="{x:Type tvx:TreeViewEx}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="SelectionMode" Value="Multiple" />
                    </Style>
                </tvx:TreeViewEx.Style>
                <tvx:TreeViewEx.ItemContainerStyle>
                    <Style TargetType="{x:Type tvx:TreeViewExItem}">
                        <EventSetter Event="MouseDoubleClick" Handler="OnItemMouseDoubleClick" />
                        <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type views:ExplorerView}}}" />
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        <Setter Property="IsEditing" Value="{Binding IsEditing, Mode=TwoWay}" />
                        <Setter Property="TemplateEdit">
                            <Setter.Value>
                                <DataTemplate>
                                    <DockPanel>
                                        <Image Source="{Binding IconSource, Converter={StaticResource NullableValueConverter}}" Stretch="None" Margin="10 0 5 0" />
                                        <tvx:EditTextBox Text="{Binding Name}" />
                                    </DockPanel>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <controls:ContextMenuEx DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}"
                                                            ItemsSource="{Binding ContextMenuModel}"
                                                            ItemTemplate="{StaticResource menuTemplate}" />
                            </Setter.Value>
                        </Setter>
                    </Style>
                </tvx:TreeViewEx.ItemContainerStyle>
                <tvx:TreeViewEx.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}"
                                                  DataType="{x:Type model:TreeItem}">
                        <DockPanel>
                            <Image Source="{Binding IconSource, Converter={StaticResource NullableValueConverter}}" Stretch="None" Margin="10 0 5 0" />
                            <TextBlock Text="{Binding Name}" />
                        </DockPanel>
                    </HierarchicalDataTemplate>
                </tvx:TreeViewEx.ItemTemplate>
            </tvx:TreeViewEx>
        </Grid>
    </Grid>
</UserControl>
